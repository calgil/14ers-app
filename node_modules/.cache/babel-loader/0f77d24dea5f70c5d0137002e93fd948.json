{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = 'http://localhost:5001/api/v1/';\nconst PEAKS_URL = BASE_URL + 'peaks/';\nconst AUTH_URL = BASE_URL + 'auth/';\nconst LOGIN_URL = AUTH_URL + 'login';\nconst ADD_USER_URL = AUTH_URL + 'register';\nconst GET_USER_URL = BASE_URL + 'auth/me';\nconst UPDATE_USER_URL = AUTH_URL + 'updatedetails';\nexport const getAllPeaks = async () => {\n  try {\n    let response = await axios.get(PEAKS_URL);\n\n    if (response.data.success) {\n      response = response.data.data.map(peak => ({\n        id: peak._id,\n        name: peak.name,\n        elevation: peak.elevation,\n        forest: peak.forest,\n        range: peak.range,\n        rank: peak.rank,\n        photo: peak.photo,\n        numberOfRoutes: peak.routes.length,\n        routes: peak.routes\n      }));\n      return response;\n    }\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n\n  ;\n};\nexport const getPeakData = async id => {\n  try {\n    let response = await axios.get(`${PEAKS_URL}${id}`);\n\n    if (response.data.success) {\n      console.log('res', response.data.data);\n      response = response.data.data; // .map((peak) => ({\n      //     id: peak._id,\n      //     name: peak.name,\n      //     elevation: peak.elevation,\n      //     forest: peak.forest,\n      //     range: peak.range,\n      //     rank: peak.rank,\n      //     photo: peak.photo,\n      //     numberOfRoutes: peak.routes.length,\n      //     routes: peak.routes\n      // }));\n\n      return response;\n    }\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nclass User {\n  constructor() {\n    this.id = '';\n    this.name = '';\n    this.email = '';\n    this.role = '';\n    this.isLoggedIn = false;\n  }\n\n  setUserEmail(email) {\n    this.email = email;\n  }\n\n  setIsLoggedIn(loggedIn) {\n    this.isLoggedIn = loggedIn;\n  }\n\n  setUserData(userData) {\n    const {\n      email,\n      name,\n      role,\n      _id\n    } = userData;\n    this.id = _id;\n    this.name = name;\n    this.email = email;\n    this.role = role;\n  }\n\n}\n\nexport class AuthService extends User {\n  constructor() {\n    super();\n\n    this.getBearerHeader = () => this.bearerHeader;\n\n    this.getUserData = async () => {\n      const headers = this.getBearerHeader();\n\n      try {\n        const response = await axios.get(GET_USER_URL, {\n          headers\n        });\n        return response.data.data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.loginUser = async (email, password) => {\n      const headers = this.getBearerHeader();\n      const body = {\n        \"email\": email.toLowerCase(),\n        \"password\": password\n      };\n\n      try {\n        const response = await axios.post(LOGIN_URL, body, {\n          headers\n        });\n        this.setAuthToken(response.data.token);\n        this.setBearerHeader(response.data.token);\n        this.setIsLoggedIn(true);\n        const data = await this.getUserData();\n        this.setUserData(data);\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n\n      ;\n    };\n\n    this.createUser = async (name, email, password) => {\n      const headers = this.getBearerHeader();\n      const body = {\n        \"name\": name,\n        \"email\": email.toLowerCase(),\n        \"password\": password\n      };\n\n      try {\n        const response = await axios.post(ADD_USER_URL, body, {\n          headers\n        });\n        this.setAuthToken(response.data.token);\n        this.setBearerHeader(response.data.token);\n        this.setIsLoggedIn(true);\n        const data = await this.getUserData();\n        this.setUserData(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.editUser = async newUserInfo => {\n      const headers = this.getBearerHeader();\n      const body = newUserInfo;\n\n      try {\n        //const response =\n        await axios.put(UPDATE_USER_URL, body, {\n          headers\n        });\n        const data = await this.getUserData();\n        this.setUserData(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.authToken = '';\n    this.bearerHeader = {};\n  }\n\n  logoutUser() {\n    this.id = '';\n    this.name = '';\n    this.email = '';\n    this.role = '';\n    this.isLoggedIn = false;\n    this.authToken = '';\n    this.bearerHeader = {};\n  }\n\n  setAuthToken(token) {\n    this.authToken = token;\n  }\n\n  setBearerHeader(token) {\n    this.bearerHeader = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  }\n\n}","map":{"version":3,"names":["axios","BASE_URL","PEAKS_URL","AUTH_URL","LOGIN_URL","ADD_USER_URL","GET_USER_URL","UPDATE_USER_URL","getAllPeaks","response","get","data","success","map","peak","id","_id","name","elevation","forest","range","rank","photo","numberOfRoutes","routes","length","err","console","error","getPeakData","log","User","constructor","email","role","isLoggedIn","setUserEmail","setIsLoggedIn","loggedIn","setUserData","userData","AuthService","getBearerHeader","bearerHeader","getUserData","headers","loginUser","password","body","toLowerCase","post","setAuthToken","token","setBearerHeader","createUser","editUser","newUserInfo","put","authToken","logoutUser"],"sources":["/Users/calvingilbert/my-code/personal-proj/14ers/fourteeners-app/src/services.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'http://localhost:5001/api/v1/';\nconst PEAKS_URL = BASE_URL + 'peaks/';\nconst AUTH_URL = BASE_URL + 'auth/';\nconst LOGIN_URL = AUTH_URL + 'login';\nconst ADD_USER_URL = AUTH_URL + 'register';\nconst GET_USER_URL = BASE_URL + 'auth/me';\nconst UPDATE_USER_URL = AUTH_URL + 'updatedetails';\n\nexport const getAllPeaks = async () => {\n    try {\n        let response = await axios.get(PEAKS_URL);\n        if(response.data.success){\n            response = response.data.data.map((peak) => ({\n                id: peak._id,\n                name: peak.name,\n                elevation: peak.elevation,\n                forest: peak.forest,\n                range: peak.range,\n                rank: peak.rank,\n                photo: peak.photo,\n                numberOfRoutes: peak.routes.length,\n                routes: peak.routes\n            }));\n            return response;\n        }\n    } catch (err) {\n        console.error(err);\n        throw err;\n    };\n};\n\nexport const getPeakData = async (id) => {\n    try {\n        let response  = await axios.get(`${PEAKS_URL}${id}`);\n        if(response.data.success) {\n            console.log('res', response.data.data);\n            response = response.data.data\n                // .map((peak) => ({\n                //     id: peak._id,\n                //     name: peak.name,\n                //     elevation: peak.elevation,\n                //     forest: peak.forest,\n                //     range: peak.range,\n                //     rank: peak.rank,\n                //     photo: peak.photo,\n                //     numberOfRoutes: peak.routes.length,\n                //     routes: peak.routes\n                // }));\n            return response\n        }\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\nclass User {\n    constructor() {\n        this.id = '';\n        this.name = '';\n        this.email = '';\n        this.role = '';\n        this.isLoggedIn = false;\n    }\n\n    setUserEmail(email) {this.email = email; }\n    setIsLoggedIn(loggedIn) { this.isLoggedIn = loggedIn; }\n\n    setUserData(userData) {\n       const { email, name, role, _id } = userData;\n        this.id = _id; \n        this.name = name;\n        this.email = email;\n        this.role = role;\n    }\n}\n\nexport class AuthService extends User {\n    constructor() {\n        super();\n        this.authToken = '';\n        this.bearerHeader = {};\n    }\n\n    logoutUser() {\n        this.id = '';\n        this.name = '';\n        this.email = '';\n        this.role = '';\n        this.isLoggedIn = false;\n        this.authToken = '';\n        this.bearerHeader = {};\n    }\n\n    setAuthToken(token) { this.authToken = token; }\n\n    setBearerHeader(token) {\n        this.bearerHeader = {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    }\n\n    getBearerHeader = () => this.bearerHeader;\n\n    getUserData = async () => {\n        const headers = this.getBearerHeader();\n        try {\n            const response = await axios.get(GET_USER_URL, { headers });\n            return response.data.data\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    loginUser = async (email, password) => {\n        const headers = this.getBearerHeader();\n        const body = { \"email\": email.toLowerCase(), \"password\": password };\n        try {\n            const response = await axios.post(LOGIN_URL, body, { headers });\n            this.setAuthToken(response.data.token);\n            this.setBearerHeader(response.data.token);\n            this.setIsLoggedIn(true);\n            const data = await this.getUserData();\n            this.setUserData(data);\n        } catch (error) {\n            console.error(error);\n            throw error;\n        };\n    };\n\n    createUser = async (name, email, password) => {\n        const headers = this.getBearerHeader();\n        const body = { \n            \"name\": name, \n            \"email\": email.toLowerCase(), \n            \"password\": password \n        };\n\n        try {\n            const response = await axios.post(ADD_USER_URL, body, { headers });\n            this.setAuthToken(response.data.token);\n            this.setBearerHeader(response.data.token);\n            this.setIsLoggedIn(true);\n            const data = await this.getUserData();\n            this.setUserData(data);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    editUser = async (newUserInfo) => {\n        const headers = this.getBearerHeader();\n        const body = newUserInfo;\n\n        try {\n            //const response =\n            await axios.put(UPDATE_USER_URL, body, { headers });\n            const data = await this.getUserData();\n            this.setUserData(data);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}